// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ChUpdateResponder is an autogenerated mock type for the ChUpdateResponder type
type ChUpdateResponder struct {
	mock.Mock
}

// Accept provides a mock function with given fields: ctx
func (_m *ChUpdateResponder) Accept(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Reject provides a mock function with given fields: ctx, reason
func (_m *ChUpdateResponder) Reject(ctx context.Context, reason string) error {
	ret := _m.Called(ctx, reason)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, reason)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewChUpdateResponder interface {
	mock.TestingT
	Cleanup(func())
}

// NewChUpdateResponder creates a new instance of ChUpdateResponder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewChUpdateResponder(t mockConstructorTestingTNewChUpdateResponder) *ChUpdateResponder {
	mock := &ChUpdateResponder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
