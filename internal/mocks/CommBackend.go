// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	net "perun.network/go-perun/wire/net"

	perun "github.com/hyperledger-labs/perun-node"
)

// CommBackend is an autogenerated mock type for the CommBackend type
type CommBackend struct {
	mock.Mock
}

// NewDialer provides a mock function with given fields:
func (_m *CommBackend) NewDialer() perun.Dialer {
	ret := _m.Called()

	var r0 perun.Dialer
	if rf, ok := ret.Get(0).(func() perun.Dialer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(perun.Dialer)
		}
	}

	return r0
}

// NewListener provides a mock function with given fields: address
func (_m *CommBackend) NewListener(address string) (net.Listener, error) {
	ret := _m.Called(address)

	var r0 net.Listener
	if rf, ok := ret.Get(0).(func(string) net.Listener); ok {
		r0 = rf(address)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(net.Listener)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(address)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCommBackend interface {
	mock.TestingT
	Cleanup(func())
}

// NewCommBackend creates a new instance of CommBackend. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCommBackend(t mockConstructorTestingTNewCommBackend) *CommBackend {
	mock := &CommBackend{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
