// Copyright (c) 2023 - for information on the respective copyright owner
// see the NOTICE file and/or the repository at
// https://github.com/hyperledger-labs/perun-node
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.3
// source: funding_service.proto

// Package pb contains proto3 definitions for user API and the corresponding
// generated code for grpc server and client.

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterAssetERC20Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID   string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Asset       []byte `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	TokenAddr   string `protobuf:"bytes,3,opt,name=tokenAddr,proto3" json:"tokenAddr,omitempty"`
	DeposiorAcc string `protobuf:"bytes,4,opt,name=deposiorAcc,proto3" json:"deposiorAcc,omitempty"`
}

func (x *RegisterAssetERC20Req) Reset() {
	*x = RegisterAssetERC20Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAssetERC20Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAssetERC20Req) ProtoMessage() {}

func (x *RegisterAssetERC20Req) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAssetERC20Req.ProtoReflect.Descriptor instead.
func (*RegisterAssetERC20Req) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterAssetERC20Req) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RegisterAssetERC20Req) GetAsset() []byte {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *RegisterAssetERC20Req) GetTokenAddr() string {
	if x != nil {
		return x.TokenAddr
	}
	return ""
}

func (x *RegisterAssetERC20Req) GetDeposiorAcc() string {
	if x != nil {
		return x.DeposiorAcc
	}
	return ""
}

type RegisterAssetERC20Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgSuccess bool `protobuf:"varint,1,opt,name=msgSuccess,proto3" json:"msgSuccess,omitempty"`
}

func (x *RegisterAssetERC20Resp) Reset() {
	*x = RegisterAssetERC20Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAssetERC20Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAssetERC20Resp) ProtoMessage() {}

func (x *RegisterAssetERC20Resp) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAssetERC20Resp.ProtoReflect.Descriptor instead.
func (*RegisterAssetERC20Resp) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterAssetERC20Resp) GetMsgSuccess() bool {
	if x != nil {
		return x.MsgSuccess
	}
	return false
}

type IsAssetRegisteredReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Asset     []byte `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *IsAssetRegisteredReq) Reset() {
	*x = IsAssetRegisteredReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAssetRegisteredReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAssetRegisteredReq) ProtoMessage() {}

func (x *IsAssetRegisteredReq) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAssetRegisteredReq.ProtoReflect.Descriptor instead.
func (*IsAssetRegisteredReq) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{2}
}

func (x *IsAssetRegisteredReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *IsAssetRegisteredReq) GetAsset() []byte {
	if x != nil {
		return x.Asset
	}
	return nil
}

type IsAssetRegisteredResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*IsAssetRegisteredResp_MsgSuccess_
	//	*IsAssetRegisteredResp_Error
	Response isIsAssetRegisteredResp_Response `protobuf_oneof:"response"`
}

func (x *IsAssetRegisteredResp) Reset() {
	*x = IsAssetRegisteredResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAssetRegisteredResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAssetRegisteredResp) ProtoMessage() {}

func (x *IsAssetRegisteredResp) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAssetRegisteredResp.ProtoReflect.Descriptor instead.
func (*IsAssetRegisteredResp) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{3}
}

func (m *IsAssetRegisteredResp) GetResponse() isIsAssetRegisteredResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *IsAssetRegisteredResp) GetMsgSuccess() *IsAssetRegisteredResp_MsgSuccess {
	if x, ok := x.GetResponse().(*IsAssetRegisteredResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *IsAssetRegisteredResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*IsAssetRegisteredResp_Error); ok {
		return x.Error
	}
	return nil
}

type isIsAssetRegisteredResp_Response interface {
	isIsAssetRegisteredResp_Response()
}

type IsAssetRegisteredResp_MsgSuccess_ struct {
	MsgSuccess *IsAssetRegisteredResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type IsAssetRegisteredResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*IsAssetRegisteredResp_MsgSuccess_) isIsAssetRegisteredResp_Response() {}

func (*IsAssetRegisteredResp_Error) isIsAssetRegisteredResp_Response() {}

type FundReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string    `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Params    *Params   `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	State     *State    `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Idx       uint32    `protobuf:"varint,4,opt,name=idx,proto3" json:"idx,omitempty"`
	Agreement *Balances `protobuf:"bytes,5,opt,name=agreement,proto3" json:"agreement,omitempty"`
}

func (x *FundReq) Reset() {
	*x = FundReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundReq) ProtoMessage() {}

func (x *FundReq) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundReq.ProtoReflect.Descriptor instead.
func (*FundReq) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{4}
}

func (x *FundReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *FundReq) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *FundReq) GetState() *State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *FundReq) GetIdx() uint32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *FundReq) GetAgreement() *Balances {
	if x != nil {
		return x.Agreement
	}
	return nil
}

type FundResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MsgError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *FundResp) Reset() {
	*x = FundResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundResp) ProtoMessage() {}

func (x *FundResp) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundResp.ProtoReflect.Descriptor instead.
func (*FundResp) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{5}
}

func (x *FundResp) GetError() *MsgError {
	if x != nil {
		return x.Error
	}
	return nil
}

type IsAssetRegisteredResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRegistered bool `protobuf:"varint,1,opt,name=isRegistered,proto3" json:"isRegistered,omitempty"`
}

func (x *IsAssetRegisteredResp_MsgSuccess) Reset() {
	*x = IsAssetRegisteredResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAssetRegisteredResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAssetRegisteredResp_MsgSuccess) ProtoMessage() {}

func (x *IsAssetRegisteredResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAssetRegisteredResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*IsAssetRegisteredResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *IsAssetRegisteredResp_MsgSuccess) GetIsRegistered() bool {
	if x != nil {
		return x.IsRegistered
	}
	return false
}

var File_funding_service_proto protoreflect.FileDescriptor

var file_funding_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x73, 0x64, 0x6b, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x52, 0x43, 0x32, 0x30,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x6f,
	0x72, 0x41, 0x63, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x22, 0x38, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x52, 0x43, 0x32, 0x30, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x4a, 0x0a, 0x14, 0x49, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0xc3, 0x01,
	0x0a, 0x15, 0x49, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x30, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x07, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x69, 0x64, 0x78, 0x12, 0x2a, 0x0a, 0x09, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x09, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x2e, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x32, 0xcd, 0x01, 0x0a, 0x0b, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x50, 0x49,
	0x12, 0x4d, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x45, 0x52, 0x43, 0x32, 0x30, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x52, 0x43, 0x32, 0x30, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x45, 0x52, 0x43, 0x32, 0x30, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x11, 0x49, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x04, 0x46,
	0x75, 0x6e, 0x64, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_funding_service_proto_rawDescOnce sync.Once
	file_funding_service_proto_rawDescData = file_funding_service_proto_rawDesc
)

func file_funding_service_proto_rawDescGZIP() []byte {
	file_funding_service_proto_rawDescOnce.Do(func() {
		file_funding_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_funding_service_proto_rawDescData)
	})
	return file_funding_service_proto_rawDescData
}

var file_funding_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_funding_service_proto_goTypes = []interface{}{
	(*RegisterAssetERC20Req)(nil),            // 0: pb.RegisterAssetERC20Req
	(*RegisterAssetERC20Resp)(nil),           // 1: pb.RegisterAssetERC20Resp
	(*IsAssetRegisteredReq)(nil),             // 2: pb.IsAssetRegisteredReq
	(*IsAssetRegisteredResp)(nil),            // 3: pb.IsAssetRegisteredResp
	(*FundReq)(nil),                          // 4: pb.FundReq
	(*FundResp)(nil),                         // 5: pb.FundResp
	(*IsAssetRegisteredResp_MsgSuccess)(nil), // 6: pb.IsAssetRegisteredResp.MsgSuccess
	(*MsgError)(nil),                         // 7: pb.MsgError
	(*Params)(nil),                           // 8: pb.Params
	(*State)(nil),                            // 9: pb.State
	(*Balances)(nil),                         // 10: pb.Balances
}
var file_funding_service_proto_depIdxs = []int32{
	6,  // 0: pb.IsAssetRegisteredResp.msgSuccess:type_name -> pb.IsAssetRegisteredResp.MsgSuccess
	7,  // 1: pb.IsAssetRegisteredResp.error:type_name -> pb.MsgError
	8,  // 2: pb.FundReq.params:type_name -> pb.Params
	9,  // 3: pb.FundReq.state:type_name -> pb.State
	10, // 4: pb.FundReq.agreement:type_name -> pb.Balances
	7,  // 5: pb.FundResp.error:type_name -> pb.MsgError
	0,  // 6: pb.Funding_API.RegisterAssetERC20:input_type -> pb.RegisterAssetERC20Req
	2,  // 7: pb.Funding_API.IsAssetRegistered:input_type -> pb.IsAssetRegisteredReq
	4,  // 8: pb.Funding_API.Fund:input_type -> pb.FundReq
	1,  // 9: pb.Funding_API.RegisterAssetERC20:output_type -> pb.RegisterAssetERC20Resp
	3,  // 10: pb.Funding_API.IsAssetRegistered:output_type -> pb.IsAssetRegisteredResp
	5,  // 11: pb.Funding_API.Fund:output_type -> pb.FundResp
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_funding_service_proto_init() }
func file_funding_service_proto_init() {
	if File_funding_service_proto != nil {
		return
	}
	file_errors_proto_init()
	file_sdktypes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_funding_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAssetERC20Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAssetERC20Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAssetRegisteredReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAssetRegisteredResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAssetRegisteredResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_funding_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*IsAssetRegisteredResp_MsgSuccess_)(nil),
		(*IsAssetRegisteredResp_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_funding_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_funding_service_proto_goTypes,
		DependencyIndexes: file_funding_service_proto_depIdxs,
		MessageInfos:      file_funding_service_proto_msgTypes,
	}.Build()
	File_funding_service_proto = out.File
	file_funding_service_proto_rawDesc = nil
	file_funding_service_proto_goTypes = nil
	file_funding_service_proto_depIdxs = nil
}
